/*
 * Copyright 2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
scenario NewSpringBootRestService should pass smoke test

let project_name = "MyService"
let artifact_id = "foo"
let root_package = "com.foo.bar"
let version = "0.0.1"
let service_class_name = "MyTest"
let props_file = "src/main/resources/application.properties"
let group_id = "somegroup"

let pom_path = "pom.xml"
let readme_path = "README.md"
let description = "And now for something completely different"

given
  ArchiveRoot

when
  NewSpringBootRestService

then
  fileExists { "src/main/java/com/foo/bar/" + service_class_name + "Application.java" }
  and fileExists { "src/test/java/com/foo/bar/" + service_class_name + "ApplicationTests.java" }
  and fileContains pom_path artifact_id
  and fileContains pom_path version
  and fileContains readme_path project_name
  and fileContains readme_path description
  and fileExists props_file
  and fileContains props_file "server.port=8080"
  and fileContains readme_path "Created by Atomist. Need Help?"
  and { !result.fileExists("LICENSE") }


scenario NewSpringBootRestService without description should pass smoke test

let project_name = "MyService"
let artifact_id = "foo"
let root_package = "com.foo.bar"
let version = "0.0.1"
let service_class_name = "MyTest"
let props_file = "src/main/resources/application.properties"
let group_id = "somegroup"

let pom_path = "pom.xml"
let readme_path = "README.md"

given
  ArchiveRoot

when
  NewSpringBootRestService

then
  fileExists { "src/main/java/com/foo/bar/" + service_class_name + "Application.java" }
  and fileExists { "src/test/java/com/foo/bar/" + service_class_name + "ApplicationTests.java" }
  and fileContains pom_path artifact_id
  and fileContains pom_path version
  and fileContains readme_path project_name
  and fileExists props_file
  and fileContains props_file "server.port=8080"
  and { !result.fileExists("LICENSE") }
